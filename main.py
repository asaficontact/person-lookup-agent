#!/usr/bin/env python3
"""
PersonLookup Agent - NANDA Adapter Integration
Deploys the PersonLookup agent to the global Internet of Agents
"""

import os
import sys
from nanda_adapter import NANDA
from person_lookup import PersonLookupAgent
from dotenv import load_dotenv

def create_person_lookup_improvement():
    """Create a wrapper for the PersonLookup agent that's compatible with NANDA"""
    
    # Initialize the PersonLookup agent
    try:
        agent = PersonLookupAgent()
        print("✓ PersonLookup agent initialized successfully")
    except ValueError as e:
        print(f"Error initializing PersonLookup agent: {e}")
        print("Please ensure OPENAI_API_KEY is set in your .env file")
        sys.exit(1)
    
    def person_lookup_logic(message_text: str) -> str:
        """
        Process messages through the PersonLookup agent
        
        Args:
            message_text: The incoming message requesting information about a person
            
        Returns:
            A comprehensive markdown report about the person
        """
        try:
            # Check if the message is asking for help or instructions
            if message_text.lower().strip() in ['help', 'how to use', 'instructions']:
                return """# PersonLookup Agent Help

I can help you find comprehensive information about any person. Just send me a message with:

- A person's name (e.g., "Tell me about Elon Musk")
- Additional context if needed (e.g., "Find information about Tim Cook, CEO of Apple")
- Specific queries (e.g., "What are Marie Curie's scientific achievements?")

I'll search multiple sources and compile a detailed report including:
- Personal information
- Professional background
- Education
- Notable achievements
- Publications and works
- Online presence
- Recent activities

Just send me the name of the person you'd like to know about!"""

            # Process the lookup request
            print(f"Processing lookup request: {message_text}")
            result = agent.lookup_person(message_text)
            
            if result["success"]:
                # Add a footer with agent information
                report = result["report"]
                footer = f"\n\n---\n*Report generated by PersonLookup Agent at {result['timestamp']}*"
                return report + footer
            else:
                # Return error message in a user-friendly format
                return f"""# Error Processing Request

I encountered an error while looking up information:

**Error:** {result['error']}

**Your Query:** {message_text}

Please try:
- Checking the person's name spelling
- Adding more context (e.g., profession, company)
- Simplifying your query

If the issue persists, the person might have limited public information available."""

        except Exception as e:
            print(f"Unexpected error in person_lookup_logic: {e}")
            return f"""# System Error

An unexpected error occurred while processing your request.

**Error Details:** {str(e)}

Please try again with a simpler query or contact support if the issue persists."""
    
    return person_lookup_logic


def main():
    #load environment variables
    load_dotenv()
    
    # Create the PersonLookup improvement function
    person_lookup_improvement = create_person_lookup_improvement()
    
    # Initialize NANDA with the PersonLookup agent
    nanda = NANDA(person_lookup_improvement)
    print("✓ NANDA adapter initialized")
    
    # Get required environment variables
    anthropic_key = os.getenv("ANTHROPIC_API_KEY")
    domain = os.getenv("DOMAIN_NAME")
    
    try:
        # Start the server with SSL support
        nanda.start_server_api(anthropic_key, domain)
    except KeyboardInterrupt:
        print("\n\nShutting down PersonLookup agent...")
        print("Thank you for using NANDA!")
    except Exception as e:
        print(f"\nError starting server: {e}")
        sys.exit(1)


if __name__ == "__main__":
    main()
